using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Character  MonoBehaviour {
    
    [SerializeField] private float speed;
    [SerializeField] protected Stat health;

    protected Animator myAnimator;
    public Animator MyAnimator { get; set; }
     public PolygonCollider2D MyPolygonCollider2D { get; set; }
     public PolygonCollider2D myPolygonCollider2D;
    protected Vector2 direction;
    private Rigidbody2D myRigitbody;
    protected bool isAttacking = false;
    protected Coroutine attackRoutine;
    [SerializeField] protected Transform hitBox;

    public bool IsMoving {
        get {
            return direction.x != 0  direction.y != 0;
        }
    }

     Start is called before the first frame update
    protected virtual void Start() {
        myRigitbody = GetComponentRigidbody2D();
        myAnimator = GetComponentAnimator();
         myPolygonCollider2D = GetComponentPolygonCollider2D();
    }

     Update is called once per frame
    protected virtual void Update() {
        HandleLayers();
    }

    private void FixedUpdate() {
        Move();
    }

    public void Move() {
        myRigitbody.velocity = direction.normalized  speed;
    }

    public void HandleLayers() {

        if (IsMoving) {
            ActivateLayer(Walk);
            myAnimator.SetFloat(x, direction.x);
            myAnimator.SetFloat(y, direction.y);

            StopAttack();
        }
        else if (isAttacking) {
            ActivateLayer(Attack);
        }
        else {
            ActivateLayer(Idle);
        }
    }

    public void ActivateLayer(string layerName) {
        for (int i = 0; i  myAnimator.layerCount; i++) {
            myAnimator.SetLayerWeight(i, 0);
        }

        myAnimator.SetLayerWeight(myAnimator.GetLayerIndex(layerName), 1);
    }

    public void StopAttack() {
        if (attackRoutine != null) {
            StopCoroutine(attackRoutine);
            isAttacking = false;
            myAnimator.SetBool(attack, isAttacking);
             myPolygonCollider2D.enabled = false;
            
            if (attackRoutine != null)
                StopCoroutine(attackRoutine);
        }
    }

    public virtual void TakeDamage(float damage) {
        health.MyCurrentValue -= damage;

        if (health.MyCurrentValue = 0) {
            MyAnimator.SetTrigger(die);
        }
    }
}
